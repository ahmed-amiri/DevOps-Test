name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    # Frontend Tests
    - name: Set up Node.js for Frontend
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Dependencies and Run Frontend Tests
      working-directory: ./thefrontend
      run: |
        npm install
        npm test

  build-and-push-docker-images:
    name: Build and Push Docker Images
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Backend Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/thebackend ./thebackend
        docker push ${{ secrets.DOCKER_USERNAME }}/thebackend

    - name: Build and Push Frontend Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/thefrontend ./thefrontend
        docker push ${{ secrets.DOCKER_USERNAME }}/thefrontend

    - name: Pull MySQL Image
      run: |
        docker pull mysql:8.0

  deploy:
    name: Deploy Services
    needs: build-and-push-docker-images
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Deploy with Docker Compose
      run: |
        docker-compose down || true
        docker-compose up -d
